#include <iostream>
#include <vector>
#include <fstream>
#include <string>
using namespace std;

string filename = "tasks.txt";
vector<string> tasks;

// Load tasks from file
void loadTasks() {
    tasks.clear();
    ifstream file(filename);
    string line;
    while (getline(file, line)) {
        if (!line.empty())
            tasks.push_back(line);
    }
    file.close();
}

// Save tasks to file
void saveTasks() {
    ofstream file(filename);
    for (auto &t : tasks) {
        file << t << "\n";
    }
    file.close();
}

// Create a task
void createTask() {
    cin.ignore();
    string task;
    cout << "Enter task: ";
    getline(cin, task);
    tasks.push_back(task);
    saveTasks();
    cout << "Task added successfully!\n";
}

// Read tasks
void readTasks() {
    cout << "\nTask List:\n";
    if (tasks.empty()) {
        cout << "No tasks available.\n";
        return;
    }
    for (int i = 0; i < tasks.size(); i++) {
        cout << i + 1 << ". " << tasks[i] << "\n";
    }
}

// Update a task
void updateTask() {
    int id;
    cout << "Enter task number to update: ";
    cin >> id;
    if (id >= 1 && id <= tasks.size()) {
        cin.ignore();
        cout << "Enter new task: ";
        getline(cin, tasks[id - 1]);
        saveTasks();
        cout << "Task updated successfully!\n";
    } else {
        cout << "Invalid ID!\n";
    }
}

// Delete a task
void deleteTask() {
    int id;
    cout << "Enter task number to delete: ";
    cin >> id;
    if (id >= 1 && id <= tasks.size()) {
        tasks.erase(tasks.begin() + id - 1);
        saveTasks();
        cout << "Task deleted successfully!\n";
    } else {
        cout << "Invalid ID!\n";
    }
}

int main() {
    loadTasks(); // Load tasks at start
    int choice;

    while (true) {
        cout << "\n====== Task Manager (with File Storage) ======\n";
        cout << "1. Create\n2. Read\n3. Update\n4. Delete\n5. Exit\nChoice: ";
        cin >> choice;

        switch (choice) {
            case 1: createTask(); break;
            case 2: readTasks(); break;
            case 3: updateTask(); break;
            case 4: deleteTask(); break;
            case 5: 
                cout << "Exiting... Goodbye\n"; 
                return 0;
            default: cout << "Invalid choice!\n";
        }
    }
}
